@charset "UTF-8";
//无参数@mixin指令
@mixin center-block {
    display: block;
    margin: 0 auto;
}

.demo {
    @include center-block;
}

//带参数的@mixin指令
@mixin opacity($opacity: 50) {
    opacity: $opacity / 100;
    filter: alpha(opacity=$opacity);
}

.opacity {
    @include opacity; //参数使用默认值
}

.opacity-80 {
    @include opacity(80); //传递参数
}

//如@include传入参数的个数小于@mixin定义参数的个数，则按照顺序表示，后面不足的使用默认值
//如不足的没有默认值则报错。除此之外还可以选择性的传入参数，使用参数名与值同时传入
@mixin horizontal-line($border: 1px solid #ccc, $padding:10px) {
    border-bottom: $border;
    padding-top: $padding;
    padding-bottom: $padding;
}

.imgtext-h li {
    @include horizontal-line(1px solid #fff);
}

.imgtext-h--product li {
    @include horizontal-line($padding: 15px);
}

//如果一个参数可以有多组值，如box-shadow、transition等，那么参数则需要在变量后加三个点表示，如$variables...。
@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    box-shadow: $shadow;
}

.box {
    @include box-shadow(0 2px 2px rgba(0, 0, 0, .3), 0 3px 3px rgba(0, 0, 0, .3), 0 4px 4px rgba(0, 0, 0, .3));
    width: 100px;
    height: 100px;
}

//同样的传递（可变）参数的时候也可以用...来代替
@mixin colors($text, $background, $border) {
    color: $text;
    background-color: $background;
    border-color: $border;
}

$values: #ff0000,
#00ff00,
#0000ff;
.primary {
    @include colors($values...);
}

$value-map: (text: #00ff00, background: #0000ff, border: #ff0000);
.secondary {
    @include colors($value-map...);
}

//@extend 来选择要继承的样式
h1 {
    border: 4px solid #ff9aa9;
}

.speaker {
    @extend h1;
    border-width: 2px;
}

//%占位符,如果用这种占位符，不会生成多余的css样式
%ir {
    color: transparent;
    text-shadow: none;
    background-color: transparent;
    border: 0;
}

#header {
    h2 {
        @extend %ir;
        width: 300px;
    }
}

.ir {
    @extend %ir;
}

