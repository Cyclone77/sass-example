@charset "UTF-8";
$lte7: true !default; //是否兼容IE7
//简单版不带参数的@mixin
@mixin center-block {
    margin-left: auto;
    margin-right: auto;
}
//带条件的@mixin
//inline-block
//ie6-7*display: inline;*zoom:1;
@mixin inline-block {
    display: inline-block;
    @if $lte7 {
        *display: inline;
        *zoom: 1;
    }
}
//带参数的@mixin
@mixin float($float: left) {
    float: $float;
    @if $lte7 {
        display: inline;
    }
}
//多个参数的@mixin
@mixin disable($bgColor: #6e6e6e, $textColor: #ababab) {
    background-color: $bgColor !important;
    color: $textColor !important;
    cursor: not-allowed;
}
//多属性值的@mixin
@mixin box-shadow($shadow...) {
    -webkit-box-shadow: $shadow;
    -moz-box-shadow: $shadow;
    box-shadow: $shadow;
}
//@content 嵌套调用
@mixin header {
    #header {
        @content;
    }
}
//@content 主要用途
@mixin screen($res-min, $res-max) {
     @media screen and (min-width: $res-min) and (max-width: $res-max){
        @content;
    }
}
//三角形
@mixin triangle($direction, $size, $borderColor) {
    content: "";
    height: 0;
    width: 0;
    @if $direction == top {
        border-bottom: $size solid $borderColor;
        border-left: $size dashed transparent;
        border-right: $size dashed transparent;
    }
    @if $direction == left {
        border-right: $size solid $borderColor;
        border-top: $size dashed transparent;
        border-bottom: $size dashed transparent;
    }
}; //生成前缀
/**
Trident内核：主要代表为IE浏览器
Gecko内核：主要代表为Firefox
Presto内核：主要代表为Opera
Webkit内核：产要代表为Chrome和Safari

Trident内核：前缀为-ms
Gecko内核：前缀为-moz
Presto内核：前缀为-o
Webkit内核：前缀为-webkit
**/
$prefix-for-webkit: true !default;
$prefix-for-mozilla: true !default;
$prefix-for-microsoft: true !default;
$prefix-for-opera: false !default;
$prefix-for-spec: true !default; //标准
@mixin prefix($property, $value, $prefixes) {
     @each $prefix in $prefixes{
        @if $prefix == webkit and $prefix-for-webkit == true {
            -webkit-#{$property}: $value;
        }
        @else if $prefix == moz and $prefix-for-mozilla == true {
            -moz-#{$property}: $value;
        }
        @else if $prefix == ms and $prefix-for-microsoft == true {
            -ms-#{$property}: $value;
        }
        @else if $prefix == o and $prefix-for-opera == true {
            -o-#{$property}: $value;
        }
        @else if $prefix == spec and $prefix-for-spec == true {
            #{$property}: $value;
        }
        @else {
             @warn"Unrecognized prefix: #{$prefix}";
        }
    }
}
//设置宽高，默认为auto
@mixin size($size...) {
    $size: if(length($size) > 0, $size, auto);
    $width: nth($size, 1);
    $height: nth($size, length($size));
    @if $width != auto {
        $width: if(unitless($width), $width + px, $width);
    }
    @if $height != auto {
        $height: if(unitless($height), $height + px, $height);
    }
    width: $width;
    height: $height;
}

%center-block {
    @include center-block;
}
//清除浮动
%clearfix {
    @if $lte7 {
        *zoom: 1;
    }

    &:after,
    &:before {
        content: "";
        display: table;
        font: 0/0 a;
    }

    &:after {
        clear: both;
    }
}
//px转换em
@function pxToEm($px, $base: 16) {
     @return ($px / $base) * 1em;
}
//960网格布局
$_columns: 12 !default; // 总列数
$_column-width: 60px !default; // 单列宽
$_gutter: 20px !default; // 间隔
@function get_width($columns:$_columns, $onlyInnerWidth: true, $_subtract:0) {
    // 默认返回值
    $return: ($_column-width + $_gutter) * $columns - $_subtract !default;
    @if $onlyInnerWidth == true {
        //如果$onlyInnerWidth为true，那么减掉一个间隔$_gutter
        $return: ($_column-width + $_gutter) * $columns - $_gutter - $_subtract;
    }
    @return $return;
}
